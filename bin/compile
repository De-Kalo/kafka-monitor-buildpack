#!/usr/bin/env bash
# Fail fast
set -e
set -o pipefail
set -x
BUILD_DIR="$1"
ENV_DIR="$3"
BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)
echo $BUILDPACK_DIR


mkdir $BUILDPACK_DIR/kafka-monitor
LIB=$BUILDPACK_DIR/kafka-monitor
cd $LIB
# download the buildpack
JVM_COMMON_BUILDPACK=${JVM_COMMON_BUILDPACK:-https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz}
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java

# install JDK
install_java_with_overlay $LIB
wget https://downloads.apache.org/kafka/3.3.1/kafka_2.12-3.3.1.tgz -nv
tar xzf kafka_2.12-3.3.1.tgz
# mv kafka_2.12-3.3.1 $LIB
export PATH="$LIB/kafka_2.12-3.3.1/bin:$PATH"


# Write config vars to files.
cat "$ENV_DIR/KAFKA_CLIENT_CERT_KEY" >> prod.keystore.pem
cat "$ENV_DIR/KAFKA_CLIENT_CERT" >> prod.keystore.pem
cat "$ENV_DIR/KAFKA_TRUSTED_CERT" > prod.truststore.pem

# Set passwords
KEYSTORE_PASSWORD=`cat $ENV_DIR/KAFKA_KEYSTORE_PASSWORD`
TRUSTSTORE_PASSWORD=`cat $ENV_DIR/KAFKA_KEYSTORE_PASSWORD`

keytool -importcert -file prod.truststore.pem -keystore prod.truststore.jks -deststorepass $TRUSTSTORE_PASSWORD -noprompt
openssl pkcs12 -export -in prod.keystore.pem -out prod.keystore.pkcs12 -password pass:$KEYSTORE_PASSWORD 2>&1
keytool -importkeystore -srcstoretype PKCS12 -destkeystore prod.keystore.jks -deststorepass $KEYSTORE_PASSWORD -srckeystore prod.keystore.pkcs12 -srcstorepass $KEYSTORE_PASSWORD 2>&1

# Generate PKCS12 from cert.pem and key.pem
#openssl pkcs12 -export -out cert.pkcs12 -in cert.pem -inkey key.pem -password pass:$KEYSTORE_PASSWORD

echo "security.protocol=SSL" >> prod.config.properties
echo "ssl.endpoint.identification.algorithm=" >> prod.config.properties
echo "ssl.truststore.type = JKS" >> prod.config.properties
echo "ssl.truststore.location=$LIB/prod.truststore.jks" >> prod.config.properties
echo "ssl.truststore.password=$TRUSTSTORE_PASSWORD" >> prod.config.properties
echo "ssl.keystore.type = JKS" >> prod.config.properties
echo "ssl.keystore.location=$LIB/prod.keystore.jks" >> prod.config.properties
echo "ssl.keystore.password=$KEYSTORE_PASSWORD" >> prod.config.properties
